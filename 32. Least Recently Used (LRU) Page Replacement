#include <stdio.h>

int findLRU(int time[], int n) {
    int min = time[0], pos = 0;
    for (int i = 1; i < n; i++) {
        if (time[i] < min) {
            min = time[i];
            pos = i;
        }
    }
    return pos;
}

void LRU(int pages[], int n, int capacity) {
    int frames[capacity], time[capacity], counter = 0, faults = 0;
    for (int i = 0; i < capacity; i++)
        frames[i] = -1;

    for (int i = 0; i < n; i++) {
        int flag = 0;
        for (int j = 0; j < capacity; j++) {
            if (frames[j] == pages[i]) {
                flag = 1;
                time[j] = ++counter;
                break;
            }
        }

        if (!flag) {
            int pos = findLRU(time, capacity);
            frames[pos] = pages[i];
            time[pos] = ++counter;
            faults++;
        }

        printf("Frames: ");
        for (int k = 0; k < capacity; k++)
            printf("%d ", frames[k]);
        printf("\n");
    }

    printf("Total Page Faults: %d\n", faults);
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2};
    int n = sizeof(pages) / sizeof(pages[0]);
    LRU(pages, n, 3);
    return 0;
}
