#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

int main() {
    int n, head, direction, size = 200;
    printf("Enter number of requests: ");
    scanf("%d", &n);

    int req[n + 1];
    printf("Enter request sequence: ");
    for (int i = 0; i < n; i++)
        scanf("%d", &req[i]);

    printf("Enter head position: ");
    scanf("%d", &head);
    printf("Enter direction (0 for left, 1 for right): ");
    scanf("%d", &direction);

    req[n] = head;
    qsort(req, n + 1, sizeof(int), compare);

    int pos = 0;
    while (req[pos] != head) pos++;

    printf("Seek sequence: ");
    int seek = 0;
    if (direction == 1) {
        for (int i = pos; i <= n; i++) {
            printf("%d ", req[i]);
            if (i > pos) seek += abs(req[i] - req[i - 1]);
        }
        seek += abs(req[n] - (size - 1));
        printf("%d ", size - 1);
        for (int i = pos - 1; i >= 0; i--) {
            printf("%d ", req[i]);
            if (i < pos - 1) seek += abs(req[i + 1] - req[i]);
        }
    } else {
        for (int i = pos; i >= 0; i--) {
            printf("%d ", req[i]);
            if (i < pos) seek += abs(req[i + 1] - req[i]);
        }
        seek += abs(req[0] - 0);
        printf("0 ");
        for (int i = pos + 1; i <= n; i++) {
            printf("%d ", req[i]);
            if (i > pos + 1) seek += abs(req[i] - req[i - 1]);
        }
    }

    printf("\nTotal seek time: %d\n", seek);
    return 0;
}
