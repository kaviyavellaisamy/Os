#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) { return (*(int*)a - *(int*)b); }

int main() {
    int i, j, n, head, size, direction;
    printf("Enter number of requests: ");
    scanf("%d", &n);
    int req[n+1];
    printf("Enter request sequence: ");
    for (i = 0; i < n; i++) scanf("%d", &req[i]);
    printf("Enter disk size: ");
    scanf("%d", &size);
    printf("Enter initial head position: ");
    scanf("%d", &head);
    printf("Enter direction (0=left, 1=right): ");
    scanf("%d", &direction);

    req[n] = head;
    n++;
    qsort(req, n, sizeof(int), compare);

    int seek = 0, pos;
    for (i = 0; i < n; i++) if (req[i] == head) { pos = i; break; }

    if (direction == 1) {
        for (i = pos; i < n - 1; i++) seek += abs(req[i+1] - req[i]);
        seek += abs(size - 1 - req[n-1]);
        seek += abs(req[pos-1] - 0);
        for (i = pos - 1; i > 0; i--) seek += abs(req[i] - req[i-1]);
    } else {
        for (i = pos; i > 0; i--) seek += abs(req[i] - req[i-1]);
        seek += req[0];
        seek += abs(req[n-1] - size + 1);
        for (i = pos + 1; i < n - 1; i++) seek += abs(req[i] - req[i+1]);
    }

    printf("Total Seek Time: %d\n", seek);
    return 0;
}
